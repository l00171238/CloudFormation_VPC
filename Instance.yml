# This YML creates Instances based on the regions for the VPC called India in all the subnets called States
Parameters:
  VPCId:
    Description: Name of VPC Id from Output
    Type: String
  GatewayId:
    Description: Name of Gateway Id from Output
    Type: String
    Default: GateWayId

  InstanceEnv:
    Description: This is for mapping the instance image and region
    Type: String
    AllowedValues:
      - "Prod"
      - "Dev"
    ConstraintDescription: Allowed values are Dev or Prod
  SubnetIdExportName1:
    Description: Subnet Id for public subnet 1
    Type: String
    Default: subnets-Publicsubnet1

Mappings:
  RegionAMI:
    us-east-1:
      AMI: ami-0ff8a91507f77f867
    us-east-2:
      AMI: ami-0b59bfac6be064b78
    us-west-1:
      AMI: ami-0bdb828fd58c52235
    us-west-2:
      AMI: ami-a0cfeed8
    ap-south-1:
      AMI: ami-0912f71e06545ad88
    ap-northeast-3:
      AMI: ami-0708689cfc3edb71d
    ap-northeast-2:
      AMI: ami-0a10b2721688ce9d2
    ap-southeast-1:
      AMI: ami-08569b978cc4dfa10
    ap-southeast-2:
      AMI: ami-09b42976632b27e9b
    ap-northeast-1:
      AMI: ami-06cd52961ce9f0d85
    ca-central-1:
      AMI: ami-0b18956f
    eu-central-1:
      AMI: ami-0233214e13e500f77
    eu-west-1:
      AMI: ami-047bb4163c506cd98
    eu-west-2:
      AMI: ami-f976839e
    eu-west-3:
      AMI: ami-0ebc281c20e89ba4b
    eu-north-1:
      AMI: ami-05c42683296709b61
    sa-east-1:
      AMI: ami-07b14488da8ea02a0
  EnvToInstanceType:
    Dev:
      instanceType: "t2.micro"
      name: "Dev"
    Prod:
      instanceType: "t2.micro"
      name: "Prod"
Resources:
  instanceMumbai:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        !FindInMap [EnvToInstanceType, !Ref "InstanceEnv", instanceTye]
      ImageId: !FindInMap [RegionAMI, !Ref "AWS::Region", AMI]
      VPCId:
        Fn::ImportValue: !Ref VPCId
      GatewayId:
        Fn::ImportValue: !Ref GatewayId
      SubnetId:
        Fn::ImportValue: !Ref SubnetIdExportName1
  # Security group for !st instance
  Securitygroup1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the jumpbox
      GroupName: jumpbox SG1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Tag
      VpcId:
        Fn::ImportValue: !Ref VPCId

  # instanceGujurat:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     InstanceType: !FindInMap [EnvToInstanceType, !Ref "InstanceEnv", instanceTye]
  #     ImageId: !FindInMap [RegionAMI, !Ref "AWS::Region", AMI]
  #     VPCId:
  #     GatewayId:
  #     SubnetId:
  #     InstanceName:
  #     InstanceKeyName:

  # instanceLucknow:
  #  Type: AWS::EC2::Instance
  #   Properties:
  #     InstanceType: !FindInMap [EnvToInstanceType, !Ref "InstanceEnv", instanceTye]
  #     ImageId: !FindInMap [RegionAMI, !Ref "AWS::Region", AMI]
  #     VPCId:
  #     GatewayId:
  #     SubnetId:
  #     InstanceName:

  # instanceAmritsar:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     InstanceType: !FindInMap [EnvToInstanceType, !Ref "InstanceEnv", instanceTye]
  #     ImageId: !FindInMap [RegionAMI, !Ref "AWS::Region", AMI]
  #     VPCId:
  #     GatewayId:
  #     SubnetId:
  #     InstanceName:
  #     InstanceKeyName:
